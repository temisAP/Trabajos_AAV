# encoding: utf-8
# 2021 R1
SetScriptVersion(Version="21.1.216")
system1 = GetSystem(Name="FLU")
solution1 = system1.GetContainer(ComponentName="Solution")
solution1.Edit()
setup1 = system1.GetContainer(ComponentName="Setup")
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "21.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 1)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 2)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 3)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 4)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 5)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 6)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-item "Pressure Far-Field*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (pressure-far-field, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (pressure-far-field, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|inlet (pressure-far-field, id=7)\"))(cx-gui-do cx-enable-apply-button \"Pressure Far-Field\")(cx-gui-do cx-set-expression-entry \"Pressure Far-Field*Frame3*Frame1(Momentum)*Table1*Table14*ExpressionEntry1(X-Component of Flow Direction)\" '(\"0.766044431\" . 0))(cx-gui-do cx-set-expression-entry \"Pressure Far-Field*Frame3*Frame1(Momentum)*Table1*Table15*ExpressionEntry1(Y-Component of Flow Direction)\" '(\"0.6427876097\" . 0))(cx-gui-do cx-activate-item \"Pressure Far-Field*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Far-Field*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Far-Field*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Far-Field*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (pressure-far-field, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (pressure-far-field, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (pressure-far-field, id=7)"))(cx-gui-do cx-activate-item "Pressure Far-Field*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Far-Field*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table3*Table1*IntegerEntry1(Reporting Interval)" 10)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table3*Table1*IntegerEntry1(Reporting Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots|Histogram"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots|Histogram"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots|Histogram"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots|Histogram"))(cx-gui-do cx-activate-item "Histogram*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots|XY Plot"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots|XY Plot"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Plots|XY Plot\"))(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table3*Frame3*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Solution XY Plot*Table1*Table3*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table3*Table1*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*Table1*Table3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '())(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '())(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="""(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-46.7654 -13.4174 -13.0729) '(0 0 0) '(0.478782 -0.462806 -0.469471) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(7.10004 10.4164 -12.5597) '(0 0 0) '(0.364941 -0.286901 0.0313614) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-8.54219 -17.8796 7.93632) '(0 0 0) '(-0.317331 -0.30146 -0.000486553) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(12.841 3.48242 -23.6421) '(0 0 0) '(0.642687 -0.0901571 0.335414) 0 0)(cx-use-window-id 51)(cx-set-camera '(-19.018 5.07783 -26.5185) '(0.247606 -0.294034 -1.28104) '(0.669079 -0.434217 -0.603182) 9.10803 9.10803 \"perspective\")
(cx-use-window-id 51)(cx-set-camera-relative '(15.1884 7.91446 7.23835) '(0 0 0) '(-1.16471 0.560625 -0.256137) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-9.38162 -22.6586 1.06877) '(0 0 0) '(0.54025 0.00627302 -0.130864) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-6.99727 16.8855 -6.479) '(0 0 0) '(-0.0684388 -1.03012 0.549608) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(3.05131 4.94502 15.0465) '(0 0 0) '(-0.30041 1.31666 -0.407482) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(8.18299 -12.4359 7.42325) '(0 0 0) '(-0.227752 0.409912 0.937083) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-15.1065 -1.92014 -9.19793) '(0 0 0) '(0.256203 0.101719 -0.303733) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(7.57889 4.24651 7.79366) '(0 0 0) '(0.021289 0.00792778 0.00633532) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(3.22154 1.14742 0.925803) '(0 0 0) '(0 0 0) 0 0)(cx-use-window-id 51)""")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View*last-view")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View*projection")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuProjection*Perspective Projection")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View*projection")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuProjection*Orthographic Projection")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*View*projection")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuProjection*Perspective Projection")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(26.3247 1.38831 -28.2816) '(0 0 0) '(0.0378663 -0.00178576 0.0462345) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Pathlines\"))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Pathlines\"))(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*List3(Release from Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Pathlines*Frame4*List3(Release from Surfaces)\")(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-27.6165 0.185755 23.9863) '(0 0 0) '(0.0178384 0.000232339 -0.0437142) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(8.32853 3.62003 27.5614) '(0 0 0) '(0.330635 -0.0911639 0.163588) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(17.0107 -7.14119 9.11308) '(0 0 0) '(0.13084 -0.0611187 -0.037419) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-10.7148 27.8519 -35.4069) '(0 0 0) '(0.226241 -0.529264 -0.717698) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(10.438 -11.9844 31.9659) '(0 0 0) '(0.0816797 0.230588 0.44936) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-24.4968 -22.7696 -25.401) '(0 0 0) '(-0.87537 -0.232491 1.08743) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(10.531 2.34327 21.9504) '(0 0 0) '(0.517709 0.366479 -0.384633) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(23.1215 16.9736 5.05897) '(0 0 0) '(0.244448 -0.0664586 -0.902292) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(2.67907 0.730361 -0.956507) '(0 0 0) '(-0.035735 -0.0566756 -0.141607) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-3.39968 -2.86931 0.985161) '(0 0 0) '(-0.0453656 0.216275 0.526896) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-8.86623 5.94457 -6.02456) '(0 0 0) '(-0.0243856 0.0074482 0.0977481) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(3.34419 -11.5008 -22.0643) '(0 0 0) '(-0.664065 0.151948 -0.496543) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(2.18211 1.9505 -1.57749) '(0 0 0) '(0.0369267 0.0421141 0.136283) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-16.1861 12.8087 30.1952) '(0 0 0) '(0.269401 -0.0188233 0.0687027) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(13.6316 -1.97871 17.2715) '(0 0 0) '(-0.0212438 0.00978839 0.0332858) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(12.539 -2.62615 2.727) '(0 0 0) '(0 0 0) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-3.68633 -9.68461 -0.442694) '(0 0 0) '(0.0347105 -0.0239574 0.318968) 0 0)(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
system2 = GetSystem(Name="SYS")
mesh1 = system2.GetContainer(ComponentName="Mesh")
mesh1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
mesh1.Exit()
solutionComponent1 = system1.GetComponent(Name="Solution")
solutionComponent1.Refresh()
solution1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
solutionComponent1.Refresh()
setup1.SendCommand(Command='/file/set-tui-version "21.1"(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table3*Table1*IntegerEntry1(Reporting Interval)" 1)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table3*Table1*IntegerEntry1(Reporting Interval)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table4(Options)*Table1*Table2*Table3*PushButton1(More Settings)")(cx-gui-do cx-activate-tab-index "Solution Steering*Frame1" 0)(cx-gui-do cx-activate-tab-index "Solution Steering*Frame1" 1)(cx-gui-do cx-activate-tab-index "Solution Steering*Frame1" 0)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Solution Steering*Frame1" 1)(cx-gui-do cx-activate-item "Solution Steering*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Simulation Reports|Report Outline"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Simulation Reports|Report Outline"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Simulation Reports|Report Outline"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 1)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 2)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 3)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 4)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 5)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 6)(cx-gui-do cx-activate-tab-index "Pressure Far-Field*Frame3" 0)(cx-gui-do cx-activate-item "Pressure Far-Field*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Symmetry"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Symmetry"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Symmetry"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Symmetry|symmetry (symmetry, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Symmetry|symmetry (symmetry, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Symmetry|symmetry (symmetry, id=5)"))(cx-gui-do cx-enable-apply-button "Symmetry")(cx-gui-do cx-activate-item "Symmetry*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Mesh Interfaces"))(cx-gui-do cx-activate-item "Mesh Interfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-66.6216 -95.5173 68.3712) '(0 0 0) '(0.291213 0.270839 0.494132) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.222281 1.04097 -0.00892639) '(0 0 0) '(-6.26743e-05 -5.6684e-05 -0.00505815) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(215.34 -62.6002 -95.5585) '(0 0 0) '(0.0563251 -0.0700393 0.401514) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-25.002 34.7032 -525.805) '(0 0 0) '(0.788736 -0.272436 0.047023) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-165.633 -315.995 218.607) '(0 0 0) '(-0.322655 -0.428344 -1.36434) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-16.7734 468.624 391.003) '(0 0 0) '(0.345138 -0.935282 1.11611) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-204.39 -435.482 -365.778) '(0 0 0) '(0.217129 0.287623 -0.386504) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(419.404 188.401 249.226) '(0 0 0) '(-0.180529 0.903814 -0.352457) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-347.168 267.437 97.1683) '(0 0 0) '(0.23598 -0.119452 0.670404) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(54.8748 -96.072 38.0761) '(0 0 0) '(0.0137283 -0.022304 -0.0601697) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(86.8363 -27.8261 1.25775) '(0 0 0) '(-0.00443554 -0.0146158 -0.206355) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Graphics Effects*reflection")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Graphics Effects*reflection")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Graphics Effects*shadow")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenugraphics-shadows*Dynamic Shadows")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Graphics Effects*shadow")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenugraphics-shadows*Static Shadows")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Graphics Effects*shadow")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenugraphics-shadows*Dynamic Shadows")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Graphics Effects*gridplane")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Graphics Effects*gridplane")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Graphics Effects*shadow")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenugraphics-shadows*Dynamic Shadows")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(158.525 -104.355 -104.66) '(0 0 0) '(-0.257891 0.156693 -0.419221) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-157.105 59.8591 103.042) '(0 0 0) '(0.127188 0.121084 0.515935) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(63.1787 -18.6145 -28.7476) '(0 0 0) '(-0.115617 0.0715979 -0.24675) 0 0)(cx-gui-do cx-activate-item \"Pressure Far-Field*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-activate-item "Drag Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Force ReportSubMenu*Moment...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Moment Report Definition*Table1*TextEntry3(Name)" "cm")(cx-gui-do cx-activate-item "Moment Report Definition*Table1*TextEntry3(Name)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Moment Report Definition*Table1*Table1*Table2*Table2(Force Vector)*RealEntry1(X)\" '( 1.4))(cx-gui-do cx-set-toggle-button2 \"Moment Report Definition*Table1*Table1*Table5(Create)*CheckButton2(Report Plot)\" #t)(cx-gui-do cx-activate-item \"Moment Report Definition*Table1*Table1*Table5(Create)*CheckButton2(Report Plot)\")(cx-gui-do cx-set-toggle-button2 \"Moment Report Definition*Table1*Table1*Table5(Create)*CheckButton1(Report File)\" #t)(cx-gui-do cx-activate-item \"Moment Report Definition*Table1*Table1*Table5(Create)*CheckButton1(Report File)\")(cx-gui-do cx-activate-item \"Moment Report Definition*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Warning*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm (Invalid)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm (Invalid)"))(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-set-text-entry "Moment Report Definition*Table1*TextEntry3(Name)" "cm-rdplot")(cx-gui-do cx-activate-item "Moment Report Definition*Table1*TextEntry3(Name)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Definitions|cm (Invalid)\"))(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-set-list-selections \"Moment Report Definition*Table1*Table2*List2(Zones)\" '( 0))(cx-gui-do cx-activate-item \"Moment Report Definition*Table1*Table2*List2(Zones)\")(cx-gui-do cx-set-list-selections \"Moment Report Definition*Table1*Table2*List2(Zones)\" '())(cx-gui-do cx-activate-item \"Moment Report Definition*Table1*Table2*List2(Zones)\")(cx-gui-do cx-set-list-selections \"Moment Report Definition*Table1*Table2*List2(Zones)\" '( 0))(cx-gui-do cx-activate-item \"Moment Report Definition*Table1*Table2*List2(Zones)\")(cx-gui-do cx-activate-item \"Moment Report Definition*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-activate-item "Drag Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Force ReportSubMenu*Lift...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Lift Report Definition*Table1*TextEntry3(Name)" "cl")(cx-gui-do cx-activate-item "Lift Report Definition*Table1*TextEntry3(Name)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Lift Report Definition*Table1*Table1*Table5(Create)*CheckButton1(Report File)" #t)(cx-gui-do cx-activate-item "Lift Report Definition*Table1*Table1*Table5(Create)*CheckButton1(Report File)")(cx-gui-do cx-set-toggle-button2 "Lift Report Definition*Table1*Table1*Table5(Create)*CheckButton2(Report Plot)" #t)(cx-gui-do cx-activate-item "Lift Report Definition*Table1*Table1*Table5(Create)*CheckButton2(Report Plot)")(cx-gui-do cx-set-toggle-button2 "Lift Report Definition*Table1*Table1*Table5(Create)*CheckButton4(Print to Console)" #t)(cx-gui-do cx-activate-item "Lift Report Definition*Table1*Table1*Table5(Create)*CheckButton4(Print to Console)")(cx-gui-do cx-set-toggle-button2 "Lift Report Definition*Table1*Table1*CheckButton6(Create Output Parameter)" #t)(cx-gui-do cx-activate-item "Lift Report Definition*Table1*Table1*CheckButton6(Create Output Parameter)")(cx-gui-do cx-activate-item "Lift Report Definition*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-set-toggle-button2 "Drag Report Definition*Table1*Table1*CheckButton6(Create Output Parameter)" #t)(cx-gui-do cx-activate-item "Drag Report Definition*Table1*Table1*CheckButton6(Create Output Parameter)")(cx-gui-do cx-activate-item "Drag Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cm"))(cx-gui-do cx-set-toggle-button2 "Moment Report Definition*Table1*Table1*CheckButton6(Create Output Parameter)" #t)(cx-gui-do cx-activate-item "Moment Report Definition*Table1*Table1*CheckButton6(Create Output Parameter)")(cx-gui-do cx-activate-item "Moment Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cl (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cl (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Definitions|cl (Invalid)\"))(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-set-list-selections \"Lift Report Definition*Table1*Table2*List2(Zones)\" '( 0))(cx-gui-do cx-activate-item \"Lift Report Definition*Table1*Table2*List2(Zones)\")(cx-gui-do cx-activate-item \"Lift Report Definition*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Report Definition*Table1*Table1*List3(Report Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Drag Report Definition*Table1*Table1*List3(Report Files)\" '( 0 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Report Definition*Table1*Table1*List3(Report Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Drag Report Definition*Table1*Table1*List3(Report Files)\" '( 0 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Report Definition*Table1*Table1*List3(Report Files)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Drag Report Definition*Table1*Table1*List3(Report Files)\" '( 0 1))(cx-gui-do cx-set-list-selections \"Drag Report Definition*Table1*Table1*List3(Report Files)\" '( 0))(cx-gui-do cx-activate-item \"Drag Report Definition*Table1*Table1*List3(Report Files)\")(cx-gui-do cx-set-list-selections \"Drag Report Definition*Table1*Table1*List4(Report Plots)\" '( 0 2))(cx-gui-do cx-activate-item \"Drag Report Definition*Table1*Table1*List4(Report Plots)\")(cx-gui-do cx-set-list-selections \"Drag Report Definition*Table1*Table1*List4(Report Plots)\" '( 0 1 2))(cx-gui-do cx-activate-item \"Drag Report Definition*Table1*Table1*List4(Report Plots)\")(cx-gui-do cx-set-list-selections \"Drag Report Definition*Table1*Table1*List3(Report Files)\" '( 0 1))(cx-gui-do cx-activate-item \"Drag Report Definition*Table1*Table1*List3(Report Files)\")(cx-gui-do cx-activate-item \"Drag Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-set-toggle-button2 "Drag Report Definition*Table1*Table2*ToggleBox1(Report Output Type)*Drag Force" #t)(cx-gui-do cx-activate-item "Drag Report Definition*Table1*Table2*ToggleBox1(Report Output Type)*Drag Force")(cx-gui-do cx-set-toggle-button2 "Drag Report Definition*Table1*Table2*ToggleBox1(Report Output Type)*Drag Coefficient" #t)(cx-gui-do cx-activate-item "Drag Report Definition*Table1*Table2*ToggleBox1(Report Output Type)*Drag Coefficient")(cx-gui-do cx-activate-item "Drag Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-cd*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Force ReportSubMenu*Drag...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Drag Report Definition*Table1*TextEntry3(Name)" "cd")(cx-gui-do cx-activate-item "Drag Report Definition*Table1*TextEntry3(Name)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Drag Report Definition*Table1*Table1*Table5(Create)*CheckButton2(Report Plot)\" #t)(cx-gui-do cx-activate-item \"Drag Report Definition*Table1*Table1*Table5(Create)*CheckButton2(Report Plot)\")(cx-gui-do cx-activate-item \"Error*OK\")(cx-gui-do cx-set-toggle-button2 \"Drag Report Definition*Table1*Table1*Table5(Create)*CheckButton1(Report File)\" #t)(cx-gui-do cx-activate-item \"Drag Report Definition*Table1*Table1*Table5(Create)*CheckButton1(Report File)\")(cx-gui-do cx-set-toggle-button2 \"Drag Report Definition*Table1*Table1*Table5(Create)*CheckButton4(Print to Console)\" #t)(cx-gui-do cx-activate-item \"Drag Report Definition*Table1*Table1*Table5(Create)*CheckButton4(Print to Console)\")(cx-gui-do cx-set-toggle-button2 \"Drag Report Definition*Table1*Table1*CheckButton6(Create Output Parameter)\" #t)(cx-gui-do cx-activate-item \"Drag Report Definition*Table1*Table1*CheckButton6(Create Output Parameter)\")(cx-gui-do cx-set-list-selections \"Drag Report Definition*Table1*Table2*List2(Zones)\" '( 0))(cx-gui-do cx-activate-item \"Drag Report Definition*Table1*Table2*List2(Zones)\")(cx-gui-do cx-activate-item \"Drag Report Definition*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Report Definition*Table1*Table1*List4(Report Plots)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Drag Report Definition*Table1*Table1*List4(Report Plots)\" '())(cx-gui-do cx-set-list-selections \"Drag Report Definition*Table1*Table1*List4(Report Plots)\" '( 3))(cx-gui-do cx-activate-item \"Drag Report Definition*Table1*Table1*List4(Report Plots)\")(cx-gui-do cx-activate-item \"Drag Report Definition*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report-def-0*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|report-def-0-rplot"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|report-def-0-rplot"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report-def-0-rplot*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-def-0-rfile"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-def-0-rfile"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report-def-0-rfile*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|cd-rplot"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-cd-rplot*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-cd*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report-def-0*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Report Files*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-activate-item "Drag Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cl"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cl"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cl"))(cx-gui-do cx-activate-item "Lift Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Report Files*New...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report File*Table1*List2(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report File*Table1*List2(Available Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*Table1*Table4*PushButton1( Add>>)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "New Report File*Table1*Table6(File Name)*TextEntry1" "cd-rfile.out")(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-file-0"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report-file-0*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-file-0"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-file-0"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-file-0"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report-file-0*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Report Plots*New...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"New Report Plot*Table1*List4(Available Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"New Report Plot*Table1*List4(Available Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report Plot*Table1*Table3*PushButton1( Add>>)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "New Report Plot*Table1*Table5(Options)*TextEntry2(Plot Title)" "cd-rplot")(cx-gui-do cx-set-toggle-button2 "New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)" #t)(cx-gui-do cx-activate-item "New Report Plot*Table1*Table5(Options)*CheckButton6(Print to Console)")(cx-gui-do cx-activate-item "New Report Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|report-plot-0"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|report-plot-0"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report-plot-0*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Edit Report Plot*Table1*Table1*TextEntry1(Name)" "cd-rplot")(cx-gui-do cx-activate-item "Edit Report Plot*Table1*Table1*TextEntry1(Name)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|cl-rplot"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|cl-rplot"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|cl-rplot"))(cx-gui-do cx-activate-item "Edit Report Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-file-0"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-file-0"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-file-0"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|report-file-0"))(cx-gui-do cx-set-text-entry "Edit Report File*Table1*Table1*TextEntry1(Name)" "cd-rplot")(cx-gui-do cx-activate-item "Edit Report File*Table1*Table1*TextEntry1(Name)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report-def-0*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Parameters & Customization|Parameters|Output Parameters|report-def-0-op"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Parameters & Customization|Parameters|Output Parameters|report-def-0-op"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report-def-0-op*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|report-def-0"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report-def-0*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*NewSubMenu*Expression...\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(<expr>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(<expr>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-text-entry \"Expression Report Definition*Table1*TextEntry1(Name)\" \"p_max\")(cx-gui-do cx-activate-item \"Expression Report Definition*Table1*TextEntry1(Name)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(<expr>)max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure,)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure,1)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure,)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-toggle-button2 \"Expression Report Definition*Table1*Table3*CheckButton5(Create Output Parameter)\" #t)(cx-gui-do cx-activate-item \"Expression Report Definition*Table1*Table3*CheckButton5(Create Output Parameter)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-toggle-button2 \"Expression Report Definition*Table1*Table3*Table4(Create)*CheckButton1(Report File)\" #t)(cx-gui-do cx-activate-item \"Expression Report Definition*Table1*Table3*Table4(Create)*CheckButton1(Report File)\")(cx-gui-do cx-set-toggle-button2 \"Expression Report Definition*Table1*Table3*Table4(Create)*CheckButton2(Report Plot)\" #t)(cx-gui-do cx-activate-item \"Expression Report Definition*Table1*Table3*Table4(Create)*CheckButton2(Report Plot)\")(cx-gui-do cx-set-toggle-button2 \"Expression Report Definition*Table1*Table3*Table4(Create)*CheckButton4(Print to Console)\" #t)(cx-gui-do cx-activate-item \"Expression Report Definition*Table1*Table3*Table4(Create)*CheckButton4(Print to Console)\")(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(AbsolutePressure)\" . 1))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Definitions\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*NewSubMenu*User Defined...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User Defined Report Definition*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*NewSubMenu*Expression...\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(<expr>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(<expr>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-text-entry \"Expression Report Definition*Table1*TextEntry1(Name)\" \"t_max\")(cx-gui-do cx-activate-item \"Expression Report Definition*Table1*TextEntry1(Name)\")(cx-gui-do cx-set-toggle-button2 \"Expression Report Definition*Table1*Table3*Table4(Create)*CheckButton1(Report File)\" #t)(cx-gui-do cx-activate-item \"Expression Report Definition*Table1*Table3*Table4(Create)*CheckButton1(Report File)\")(cx-gui-do cx-set-toggle-button2 \"Expression Report Definition*Table1*Table3*Table4(Create)*CheckButton2(Report Plot)\" #t)(cx-gui-do cx-activate-item \"Expression Report Definition*Table1*Table3*Table4(Create)*CheckButton2(Report Plot)\")(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Definitions|t_max (Invalid)\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|t_max (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Definitions|t_max (Invalid)\"))(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-toggle-button2 \"Expression Report Definition*Table1*Table3*CheckButton5(Create Output Parameter)\" #t)(cx-gui-do cx-activate-item \"Expression Report Definition*Table1*Table3*CheckButton5(Create Output Parameter)\")(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Controls\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Definitions|t_max (Invalid)\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Definitions\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Definitions\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*NewSubMenu*Expression...\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|t_max (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|t_max (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Definitions|t_max (Invalid)\"))(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"max(TotalTemperature)\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|cd"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Parameters & Customization|Parameters|Output Parameters|p_max-op-Invalid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Parameters & Customization|Parameters|Output Parameters|p_max-op-Invalid""Parameters & Customization|Parameters|Output Parameters|t_max-op-Invalid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Parameters & Customization|Parameters|Output Parameters|p_max-op-Invalid""Parameters & Customization|Parameters|Output Parameters|t_max-op-Invalid"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|p_max (Invalid)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|p_max (Invalid)""Solution|Report Definitions|t_max (Invalid)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions|p_max (Invalid)""Solution|Report Definitions|t_max (Invalid)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|t_max-rfile"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|t_max-rfile""Solution|Monitors|Report Files|p_max-rfile"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|t_max-rfile""Solution|Monitors|Report Files|p_max-rfile"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|t_max-rplot"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|t_max-rplot""Solution|Monitors|Report Plots|p_max-rplot"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|t_max-rplot""Solution|Monitors|Report Plots|p_max-rplot"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Facet Maximum...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Surface Report Definition*Table1*Table1*TextEntry1(Name)" "p_max")(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table1*TextEntry1(Name)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton2(Report Plot)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton2(Report Plot)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton4(Print to Console)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton4(Print to Console)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*CheckButton5(Create Output Parameter)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*CheckButton5(Create Output Parameter)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Surface Report Definition*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Facet Maximum...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*DropDownList3(Field Variable)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*DropDownList3(Field Variable)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton2(Report Plot)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton2(Report Plot)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton4(Print to Console)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton4(Print to Console)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*CheckButton5(Create Output Parameter)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*CheckButton5(Create Output Parameter)\")(cx-gui-do cx-set-text-entry \"Surface Report Definition*Table1*Table1*TextEntry1(Name)\" \"t_max\")(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*TextEntry1(Name)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Iterations)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Solution Animations"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Solution Animations"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Solution Animations"))(cx-gui-do cx-activate-item "Animation Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Cell Register Operations"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Cell Register Operations"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Cell Register Operations"))(cx-gui-do cx-activate-item "Manage Register Operations*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-scale "Run Calculation*Table1*Table4(Options)*Table1*Table2*Table2(First- to Higher-Order Blending)*Table3*Scale1" 74)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table4(Options)*Table1*Table2*Table2(First- to Higher-Order Blending)*Table3*Scale1")')
system3 = GetSystem(Name="Geom")
geometry1 = system3.GetContainer(ComponentName="Geometry")
geometry1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-use-window-id 5)(cx-set-camera-relative '(-67.7225 -88.9187 -15.0318) '(0 0 0) '(0.246403 -0.3183 0.263225) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Pathlines\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Pathlines\"))(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*List3(Release from Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Pathlines*Frame4*List3(Release from Surfaces)\")(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*List3(Release from Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Pathlines*Frame4*List3(Release from Surfaces)\")(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 52)(cx-set-camera-relative '(-107.481 -65.405 38.0123) '(0 0 0) '(0.258387 0.231534 0.253856) 0 0)(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*List3(Release from Surfaces)\" '( 0 1 2))(cx-gui-do cx-activate-item \"Pathlines*Frame4*List3(Release from Surfaces)\")(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*List3(Release from Surfaces)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"Pathlines*Frame4*List3(Release from Surfaces)\")(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 52)(cx-set-camera-relative '(2.0004 -3.60588 1.21571) '(0 0 0) '(-0.0663634 0.0050022 0.124905) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(55.8325 38.7499 -49.6335) '(0 0 0) '(-0.217685 -0.55848 -0.637277) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-58.5585 -57.3645 -34.6447) '(0 0 0) '(-0.19403 0.300808 0.865801) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-5.38355 -19.548 31.349) '(0 0 0) '(-0.0790297 -0.0885561 -0.0354219) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(20.2844 -3.57007 0.677338) '(0 0 0) '(-0.153363 -0.898383 -0.126433) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-8.40124 75.2216 -15.7635) '(0 0 0) '(1.61112 -0.134895 -0.558393) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-40.9814 -19.4991 9.53218) '(0 0 0) '(-0.25368 0.751453 -0.245013) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-2.12766 -31.3256 8.08375) '(0 0 0) '(-0.332677 -0.289684 -0.139062) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(23.5585 49.6706 60.7451) '(0 0 0) '(-0.722828 0.299967 0.310628) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(45.348 -15.9841 20.3061) '(0 0 0) '(-0.269929 0.0626922 0.636194) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(61.6906 63.7284 -121.694) '(0 0 0) '(0.146528 0.244584 0.0220478) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(1.93871 3.744 21.8881) '(0 0 0) '(0.0551619 -0.00107712 0.318797) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-93.5296 33.3228 74.8529) '(0 0 0) '(0.0713558 -0.928206 0.412028) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(48.5504 -141.348 71.3824) '(0 0 0) '(0.0507843 -0.485232 -0.518186) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-22.4171 25.9684 6.90477) '(0 0 0) '(-0.00882328 0.0176418 0.0406803) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(4.35624 8.32163 -2.30924) '(0 0 0) '(0.0183095 0.0107371 0.0728424) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-57.2767 11.0614 -22.3668) '(0 0 0) '(0.0458078 0.34772 -1.03503) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(8.01287 9.97409 -47.6258) '(0 0 0) '(0.496403 -0.285187 0.0149643) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(48.7613 14.2823 53.6171) '(0 0 0) '(0.489735 1.08374 -0.0824418) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(12.2034 -55.6218 17.3878) '(0 0 0) '(0.236484 0.316593 0.62703) 0 0)(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-scale "Run Calculation*Table1*Table4(Options)*Table1*Table2*Table2(First- to Higher-Order Blending)*Table3*Scale1" 0)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table4(Options)*Table1*Table2*Table2(First- to Higher-Order Blending)*Table3*Scale1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-scale "Run Calculation*Table1*Table4(Options)*Table1*Table2*Table2(First- to Higher-Order Blending)*Table3*Scale1" 100)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table4(Options)*Table1*Table2*Table2(First- to Higher-Order Blending)*Table3*Scale1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*PushButton2(forward)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*PushButton3(reverse)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-scale "Run Calculation*Table1*Table4(Options)*Table1*Table2*Table2(First- to Higher-Order Blending)*Table3*Scale1" 91)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table4(Options)*Table1*Table2*Table2(First- to Higher-Order Blending)*Table3*Scale1")')
geometry1.Exit()
mesh1.Edit()
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)\")(cx-gui-do cx-activate-item \"Settings have changed!*PanelButtons*PushButton1(OK)\")(cx-use-window-id 5)(cx-set-camera-relative '(27.2116 -61.7235 -138.999) '(0 0 0) '(-0.0307771 0.0509744 0.177301) 0 0)(cx-use-window-id 6)(cx-set-camera-relative '(-57.432 218.235 -268.54) '(0 0 0) '(0.0748287 -0.477327 0.00562726) 0 0)(cx-use-window-id 5)(cx-set-camera-relative '(-9.16322 124.902 48.6056) '(0 0 0) '(-0.0342513 -0.182476 -0.303198) 0 0)(cx-use-window-id 5)(cx-set-camera-relative '(-0.450281 18.8662 23.2363) '(0 0 0) '(0.0234737 0.0818872 0.0269484) 0 0)(cx-use-window-id 5)(cx-use-window-id 5)(cx-use-window-id 5)(cx-use-window-id 5)(cx-use-window-id 5)(cx-use-window-id 5)(cx-use-window-id 5)(cx-use-window-id 6)(cx-use-window-id 5)(cx-use-window-id 6)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 0)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 1)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 0)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 2)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 0)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 3)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 0)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 4)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 0)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 1)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 2)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 3)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 4)(cx-gui-do cx-activate-tab-index "Case Check*Table1*Frame1" 0)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table4(Options)*Table1*Table2*Table3*PushButton1(More Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "Solution Steering*Frame1" 0)(cx-gui-do cx-activate-item "Solution Steering*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 51)(handle-key "control ??")(cx-use-window-id 51)(handle-key "control s")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Simulation Reports|Report Outline"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Simulation Reports|Report Outline"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Simulation Reports|Report Outline"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Simulation Reports|Report Outline"))(cx-gui-do cx-set-text-entry "Simulation Report Outline*Table1*Frame1*Table1*Table1*TextEntry2(Report Name)" "40deg1")(cx-gui-do cx-activate-item "Simulation Report Outline*Table1*Frame1*Table1*Table1*TextEntry2(Report Name)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Simulation Report Outline*Table1*Frame1*Table1*Table1*DropDownList1(Current Report)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Simulation Report Outline*Table1*Frame1*Table1*Table1*DropDownList1(Current Report)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Simulation Report Outline*Table1*Frame1*Table2*Table2*PushButton1(Generate Report)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Simulation Report Outline*Table1*Frame1*Table2*Table2*PushButton5(Export Report)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuDraw*Export as PDF")')
mesh1.Exit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
